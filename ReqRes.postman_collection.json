{
	"info": {
		"_postman_id": "f7578f5e-3b28-40a0-bc4f-fade3612480d",
		"name": "ReqRes",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34855259"
	},
	"item": [
		{
			"name": "List users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"pm.test(\"verify correct page\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.page).to.eql(2);\r",
							"    pm.expect(jsonData.per_page).to.eql(6);\r",
							"    pm.expect(jsonData.total).to.eql(12);\r",
							"    pm.expect(jsonData.total_pages).to.eql(2);\r",
							"    pm.expect(jsonData.data[0].id).to.eql(7);\r",
							"    pm.expect(jsonData.data[1].id).to.eql(8);\r",
							"    pm.expect(jsonData.data[0].avatar).to.eql(\"https://reqres.in/img/faces/7-image.jpg\");\r",
							"     pm.expect(jsonData.data[0].email).to.eql(\"michael.lawson@reqres.in\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Funke\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_URL}}api/users?page=2",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Single user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"pm.test(\"check if data is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.id).to.eql(2);\r",
							"    pm.expect(jsonData.data.last_name).to.eql(\"Weaver\");\r",
							"\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"To keep ReqRes free, contributions towards server costs are appreciated!\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_URL}}api/users/{{User_ID}}",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"users",
						"{{User_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Single User Not Found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is Not Found\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_URL}}api/users/23",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"users",
						"23"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Resource",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"pm.test(\"check correct data values\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.page).to.eql(1);\r",
							"    pm.expect(jsonData.per_page).to.eql(6);\r",
							"    pm.expect(jsonData.total).to.eql(12);\r",
							"    pm.expect(jsonData.total_pages).to.eql(2);\r",
							"    pm.expect(jsonData.data[0].id).to.eql(1);\r",
							"    pm.expect(jsonData.data[0].name).to.eql(\"cerulean\");\r",
							"    pm.expect(jsonData.data[1].name).to.eql(\"fuchsia rose\");\r",
							"    pm.expect(jsonData.data[2].year).to.eql(2002);\r",
							"    pm.expect(jsonData.data[3].id).to.eql(4);\r",
							"    \r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"blue turquoise\");\r",
							"    pm.expect(pm.response.text()).to.include(\"tigerlily\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_URL}}api/unknown",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"unknown"
					]
				}
			},
			"response": []
		},
		{
			"name": "Single Resource",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"pm.test(\"check if data is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.id).to.eql(2);\r",
							"    pm.expect(jsonData.data.name).to.eql(\"fuchsia rose\");\r",
							"    pm.expect(jsonData.support.url).to.eql(\"https://reqres.in/#support-heading\");\r",
							"\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"To keep ReqRes free, contributions towards server costs are appreciated!\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_URL}}api/unknown/{{User_ID}}",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"unknown",
						"{{User_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Single Resource Not Found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is Not Found\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_URL}}api/unknown/23",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"unknown",
						"23"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"morpheus\");\r",
							"    pm.expect(jsonData.job).to.eql(\"leader\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"leader\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}api/users",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Successful put request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201, 202]);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"morpheus\");\r",
							"    pm.expect(jsonData.job).to.eql(\"zion resident\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}api/users/{{User_ID}}",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"users",
						"{{User_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update partial info about user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Successful put request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201, 202]);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"morpheus\");\r",
							"    pm.expect(jsonData.job).to.eql(\"zion resident\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}api/users/{{User_ID}}",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"users",
						"{{User_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_URL}}api/users/{{User_ID}}",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"users",
						"{{User_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "successful register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pistol\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}api/register",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "In-successful register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"pm.test(\"information missed\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Missing password\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"sydney@fife\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}api/register",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delayed Response",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 300ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_URL}}api/users?delay=2",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "delay",
							"value": "2"
						}
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "User_ID",
			"value": "2"
		}
	]
}